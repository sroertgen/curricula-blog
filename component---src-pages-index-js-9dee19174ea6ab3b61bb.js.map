{"version":3,"file":"component---src-pages-index-js-9dee19174ea6ab3b61bb.js","mappings":"2KA0EA,IA7DY,WAAO,IAAD,MACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAW,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,YACtCC,EAAM,UAAGN,EAAKG,KAAKC,oBAAb,aAAG,EAAwBE,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,mBARN,sBAUCb,MAAAA,OAAA,EAAAA,EAAQc,OACP,2BACE,yBACGX,EADH,gCAG2B,8BAASH,EAAOc,MAH3C,aAKA,yBACE,qBACEC,KAAI,wBAAwBX,MAAAA,OAAA,EAAAA,EAAQY,SAAR,IAC5BC,MAAO,CACLC,SAAS,SACTC,QAAQ,YACRC,MAAM,OACNC,UAAU,SAGZ,gBAAC,IAAD,CAAiBC,KAAMC,EAAAA,Y,kFC6BrC,UAvFkB,SAAC,GAAwB,IAAD,EAArBzB,EAAqB,EAArBA,KAAM0B,EAAe,EAAfA,SACnBC,GAAY,UAAA3B,EAAKG,KAAKC,oBAAV,eAAwBwB,QAAxB,QACZC,EAAQ7B,EAAK8B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIT,MAAO,CAAEc,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GAAS,IAAD,IACXP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE/B,UAAU,iBACViC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYhB,KAG/B,6BAAQO,EAAKC,YAAYS,OACxB,UAAAV,EAAKC,mBAAL,eAAkBU,UACjB,yCAEGX,EAAKC,YAAYU,QAAQZ,KAAI,SAAChC,EAAQ6C,GACrC,OACE,wBAAMR,IAAK,SAAWQ,GACnB7C,EAAO8C,UADV,IAGG9C,EAAO+C,SACPF,EAAQZ,EAAKC,YAAYU,QAAQd,OAAS,EACvC,KACA,SAMb,UAAAG,EAAKC,mBAAL,eAAkBc,OACjB,mCAEGf,EAAKC,YAAYc,KAAKhB,KAAI,SAACiB,EAAKJ,GAC/B,OACE,yBAAOxC,UAAU,OAAOgC,IAAK,MAAQQ,GAClCI,QAOb,+BACE,qBACEC,wBAAyB,CACvBC,OAAQlB,EAAKC,YAAY/B,aAAe8B,EAAKmB,SAE/CV,SAAS,0B","sources":["webpack://curricula-blog/./src/components/bio.js","webpack://curricula-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            github\n          }\n          description\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const description = data.site.siteMetadata?.description\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/dini-ag-kim.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"DINI-AG-KIM logo\"\n      />\n      {author?.name && (\n        <div>\n          <p>\n            {description}\n            {` `}\n            Dieser Blog wird von der <strong>{author.name}</strong> betreut.\n          </p>\n          <p>\n            <a\n              href={`https://github.com/${social?.github || ``}`}\n              style={{\n                fontSize: `1.75em`,\n                padding: `0em 0.2em`,\n                color: `#000`,\n                boxShadow: `none`,\n              }}\n            >\n              <FontAwesomeIcon icon={faGithub} />\n            </a>\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                  {post.frontmatter?.authors && (\n                    <small>\n                      {` `}|{` `}\n                      {post.frontmatter.authors.map((author, index) => {\n                        return (\n                          <span key={\"author\" + index}>\n                            {author.firstname}\n                            {` `}\n                            {author.lastname}\n                            {index < post.frontmatter.authors.length - 1\n                              ? \",\\u00A0\"\n                              : \"\"}\n                          </span>\n                        )\n                      })}\n                    </small>\n                  )}\n                  {post.frontmatter?.tags && (\n                    <small>\n                      {` | `}\n                      {post.frontmatter.tags.map((tag, index) => {\n                        return (\n                          <small className=\"chip\" key={\"tag\" + index}>\n                            {tag}\n                          </small>\n                        )\n                      })}\n                    </small>\n                  )}\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          authors {\n            lastname\n            firstname\n          }\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","description","social","className","S","layout","formats","src","width","height","quality","alt","name","href","github","style","fontSize","padding","color","boxShadow","icon","faGithub","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","authors","index","firstname","lastname","tags","tag","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}