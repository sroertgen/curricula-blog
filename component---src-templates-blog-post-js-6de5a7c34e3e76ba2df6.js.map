{"version":3,"file":"component---src-templates-blog-post-js-6de5a7c34e3e76ba2df6.js","mappings":"2KA0EA,IA7DY,WAAO,IAAD,MACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAW,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,YACtCC,EAAM,UAAGN,EAAKG,KAAKC,oBAAb,aAAG,EAAwBE,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,mBARN,sBAUCb,MAAAA,OAAA,EAAAA,EAAQc,OACP,2BACE,yBACGX,EADH,gCAG2B,8BAASH,EAAOc,MAH3C,aAKA,yBACE,qBACEC,KAAI,wBAAwBX,MAAAA,OAAA,EAAAA,EAAQY,SAAR,IAC5BC,MAAO,CACLC,SAAS,SACTC,QAAQ,YACRC,MAAM,OACNC,UAAU,SAGZ,gBAAC,IAAD,CAAiBC,KAAMC,EAAAA,Y,kFCgCrC,UA1FyB,SAAC,GAAwB,IAAD,MAArBzB,EAAqB,EAArBA,KAAM0B,EAAe,EAAfA,SAC1BC,EAAO3B,EAAK4B,eACZC,GAAY,UAAA7B,EAAKG,KAAKC,oBAAV,eAAwB0B,QAAxB,QACVC,EAAmB/B,EAAnB+B,SAAUC,EAAShC,EAATgC,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBzB,YAAasB,EAAKM,YAAY5B,aAAesB,EAAKO,UAEpD,2BACE3B,UAAU,YACV4B,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYV,EAAKM,YAAYH,OAC1C,yBACGH,EAAKM,YAAYK,MACjB,UAAAX,EAAKM,mBAAL,eAAkBM,UACjB,kCAEGZ,EAAKM,YAAYM,QAAQC,KAAI,SAACtC,EAAQuC,GACrC,OACE,wBAAMC,IAAK,SAAWD,GACnBvC,EAAOyC,UADV,IAGGzC,EAAO0C,SACPH,EAAQd,EAAKM,YAAYM,QAAQM,OAAS,EACvC,KACA,SAMb,UAAAlB,EAAKM,mBAAL,eAAkBa,OACjB,kCAEGnB,EAAKM,YAAYa,KAAKN,KAAI,SAACO,EAAKN,GAC/B,OACE,wBAAMlC,UAAU,OAAOmC,IAAK,MAAQD,GACjCM,SAQf,2BACEC,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCb,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK9B,UAAU,iBACb,sBACEY,MAAO,CACLgC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVjC,QAAS,IAGX,0BACGU,GACC,gBAAC,EAAAwB,KAAD,CAAMC,GAAIzB,EAAS0B,OAAOC,KAAMC,IAAI,QAApC,KACK5B,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAuB,KAAD,CAAMC,GAAIxB,EAAKyB,OAAOC,KAAMC,IAAI,QAC7B3B,EAAKC,YAAYH,MADpB,Y","sources":["webpack://curricula-blog/./src/components/bio.js","webpack://curricula-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            github\n          }\n          description\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const description = data.site.siteMetadata?.description\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/dini-ag-kim.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"DINI-AG-KIM logo\"\n      />\n      {author?.name && (\n        <div>\n          <p>\n            {description}\n            {` `}\n            Dieser Blog wird von der <strong>{author.name}</strong> betreut.\n          </p>\n          <p>\n            <a\n              href={`https://github.com/${social?.github || ``}`}\n              style={{\n                fontSize: `1.75em`,\n                padding: `0em 0.2em`,\n                color: `#000`,\n                boxShadow: `none`,\n              }}\n            >\n              <FontAwesomeIcon icon={faGithub} />\n            </a>\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            {post.frontmatter.date}\n            {post.frontmatter?.authors && (\n              <span>\n                {` | `}\n                {post.frontmatter.authors.map((author, index) => {\n                  return (\n                    <span key={\"author\" + index}>\n                      {author.firstname}\n                      {` `}\n                      {author.lastname}\n                      {index < post.frontmatter.authors.length - 1\n                        ? \",\\u00A0\"\n                        : \"\"}\n                    </span>\n                  )\n                })}\n              </span>\n            )}\n            {post.frontmatter?.tags && (\n              <span>\n                {` | `}\n                {post.frontmatter.tags.map((tag, index) => {\n                  return (\n                    <span className=\"chip\" key={\"tag\" + index}>\n                      {tag}\n                    </span>\n                  )\n                })}\n              </span>\n            )}\n          </p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        authors {\n          lastname\n          firstname\n        }\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","description","social","className","S","layout","formats","src","width","height","quality","alt","name","href","github","style","fontSize","padding","color","boxShadow","icon","faGithub","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","excerpt","itemScope","itemType","itemProp","date","authors","map","index","key","firstname","lastname","length","tags","tag","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","Link","to","fields","slug","rel"],"sourceRoot":""}